#version 330 core

in vec2 vUv0;
in vec2 vUv1;

uniform sampler2D texture1;
uniform vec4 InColor;
uniform vec4 OutColor1;
uniform vec4 OutColor2;

const int MaxIter = 100;

out vec4 fFragColor;

void main(){
    float Creal = vUv1.s - 1.5;
    float Cimag = vUv1.t;
    float real = Creal;
    float imag = Cimag;
    float z2 = (real * real) + (imag * imag);
    int iter = 0;
    float tempreal = 0.0;

    while(iter < MaxIter && z2 < 4.0){
        tempreal = real;
        real = ( tempreal * tempreal) - (imag * imag ) + Creal;
        imag = 2.0 * tempreal *imag + Cimag;
        z2 = (real * real ) + (imag * imag);
        iter = iter + 1;
    }

    vec4 color = InColor;
    if(z2 >4.0)
        color = mix(OutColor1,OutColor2,fract(float(iter) * 0.04));

    vec3 color1 = vec3(texture(texture1, vUv0) * 1.5);
    color = color * vec4(color1, 1.0);  // mezcla de colores->los multiplicamos

    fFragColor = color;
}