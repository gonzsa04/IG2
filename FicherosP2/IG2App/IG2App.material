material Plano{
    technique{
        pass{
            diffuse 0.5 0.5 0.5
            ambient 0.1 0.2 0.3
            specular 0.8 0.8 0.8 68
            texture_unit{
                texture Water02.jpg
                scroll_anim 0.1 0.0
                colour_op add
            }
        }
    }
    technique {
        pass{
            diffuse 0.5 0.5 0.5
        }
    }
}

material Bomba{
    technique{
        pass{
            diffuse 0.5 0.5 0.5
            ambient 0.1 0.2 0.3
            specular 0.8 0.8 0.8 68
            texture_unit{
                texture BumpyMetal.jpg
                colour_op add
            }
        }
    }
    technique {
        pass{
            diffuse 0.5 0.5 0.5
        }
    }
}

material Smoke{
    technique{
        pass{
            lighting off
            scene_blend alpha_blend
            depth_write off
            diffuse vertexcolour
            texture_unit{
                texture smoke.png
                tex_address_mode clamp
            }
        }
    }
}

vertex_program vertexShaderLMglsl glsl {
    source vertexShaderLMglsl.txt // archivo del código
    default_params // valores para las variables uniform
    {
        param_named_auto modelViewProjMat worldviewproj_matrix
        param_named_auto time time_0_1 25 // ciclo 25->para el zoom
    }
}

fragment_program fragmentShaderLMglsl glsl {
    source fragmentShaderLMglsl.txt // archivo
    default_params // valores para las variables uniform 
    {
        param_named textura1 int 0 // unidad de textura
        param_named textura2 int 1
        //param_named_auto FB 0.5
        //param_named intLuz float 1.0;
    }
}

material ejemploShadersLM {
    technique {
        pass {
            vertex_program_ref vertexShaderLMglsl
            { // params ‐> default_params
            }
            fragment_program_ref fragmentShaderLMglsl
            { // params ‐> default_params
            }
            texture_unit texture1 {
                texture spaceSky.jpg 2d  // archivo
                //tex_address_mode clamp // por defecto se repite (repeat)
                filtering bilinear
            }
            texture_unit texture2{
                texture flare.png 2d // archivo
                tex_address_mode wrap
            }
        } 
    }
}

vertex_program MandelbrotVS1 glsl
{
    source MandelbrotVS1.txt // archivo código vertex shader
    default_params // valores para las variables uniform
    {
        param_named_auto modelViewProjMat worldviewproj_matrix
        param_named_auto time time_0_1 25 // ciclo 25->para el zoom
    }
}

fragment_program MandelbrotFS1 glsl
{
    source MandelbrotFS1.txt // archivo código fragment shader
    default_params // valores para las variables uniform
    {
        param_named InColor float4 0.5 0.5 1.0 1.0
        param_named OutColor1 float4 0.5 0.25 1.0 1.0
        param_named OutColor2 float4 1.0 0.5 0.25 1.0
    }
}

material mandelbrot1 // archivo Mandelbrot.material
{
    technique
    {
        pass
        {
            vertex_program_ref MandelbrotVS1
            { // params ‐> default_params
            }
            fragment_program_ref MandelbrotFS1
            { // params ‐> default_params
            }
        }
    }
}

vertex_program HolesVS1 glsl
{
    source HolesVS1.txt // archivo código vertex shader
    default_params // valores para las variables uniform
    {
        param_named_auto modelViewProjMat worldviewproj_matrix
        param_named_auto normalMat inverse_transpose_world_matrix
    }
}

fragment_program HolesFS1 glsl
{
    source HolesFS1.txt // archivo código fragment shader
    default_params // valores para las variables uniform
    {
        param_named texture1 int 0 // unidad de textura
        param_named color_back float3 0.6.0 0.3 0.1
        param_named color_front float3 0.0 0.6 0.0
        param_named_auto lightPos light_position 0 
        param_named_auto intLuz light_diffuse_colour 0
    }
}

material Holes 
{
    technique
    {
        pass
        {
            cull_hardware none  // para indicar que se rendericen ambas caras
            cull_software none
            vertex_program_ref HolesVS1
            { // params ‐> default_params
            }
            fragment_program_ref HolesFS1
            { // params ‐> default_params
            }
            texture_unit texture1 {
                texture corrosion.jpg 2d // archivo
            }
        }
    }
}

vertex_program LuminanceVS glsl{
    source LuminanceVS.txt
    default_params{
         param_named_auto modelViewProjMat worldviewproj_matrix
    }
}

fragment_program LuminanceFS glsl{
    source LuminanceFS.txt
    default_params{
        param_named RTT0 int 0 // textura con la escena
    }
}

material LuminancePS{
    technique{
        pass{
            depth_check off  // desactivar el depth-buffer
            depth_write off
            vertex_program_ref LuminanceVS
            { // params ‐> default_params
            }
            fragment_program_ref LuminanceFS
            { // params ‐> default_params
            }
            texture_unit RTT0{
                //sin imagen de archivo -> usa el previous render target
                filtering none // tiene la resolucion del viewport
            }
        }
    }
}